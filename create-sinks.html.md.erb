---
title: Creating Sink Resources
owner: PKS
---

This topic describes how to create a sink resource for a Kubernetes cluster
provisioned with <%= vars.product_full %> or for a namespace within a
cluster.

Sink resources enable <%= vars.product_short %> users to configure destinations for
logs transported following the Syslog Protocol defined in
[RFC 5424](https://tools.ietf.org/html/rfc5424).

<p class="note"><strong>Note</strong>: Sinks created in <%= vars.product_short %> only support TCP connections. 
UDP connections are not currently supported.</p>

## <a id='prerequisites'></a>Prerequisites

Before you can create a sink resource for a <%= vars.product_short %>-provisioned Kubernetes cluster
or a namespace within a cluster,
you must ensure that the **Enable Sink Resources** checkbox is selected in the <%= vars.product_tile %> tile.
Selecting this checkbox enables clusters and namespaces to send logs to sinks.

For more information, see the _Logging_ section of the <%= vars.product_short %> installation topic
for your IaaS:

* [Installing <%= vars.product_short %> on vSphere](installing-pks-vsphere.html#syslog)
* [Installing <%= vars.product_short %> on vSphere with NSX-T Integration](installing-nsx-t.html#syslog)
* [Installing <%= vars.product_short %> on GCP](installing-pks-gcp.html#syslog)
* [Installing <%= vars.product_short %> on AWS](installing-pks-aws.html#syslog)
* [Installing <%= vars.product_short %> on Azure](installing-pks-azure.html#syslog)

### <a id='cli-prereqs'></a> CLI Requirements

To create and manage sink resources, you must install the Kubernetes CLI, <code>kubectl</code>. 

Alternately, to manage ClusterSink resources with the PKS CLI, you must use PKS CLI v1.3 or later.

For installation instructions, see <a href="installing-kubectl-cli.html">Installing the Kubernetes CLI</a> 
and <a href="installing-pks-cli.html">Installing the PKS CLI</a>.


## <a id='define-cluster-sink'></a>ClusterSink Resources
ClusterSink resources enable you to capture logs from your clusters.

### <a id='define-resource'></a>Create ClusterSinks

To create ClusterSink resources, you can:

* [Create ClusterSink Resource with the PKS CLI](#cluster-sink-pks)
* [Create a Syslog ClusterSink Resource with YAML and kubectl](#syslog-cluster-sink)
* [Create a Webhook ClusterSink Resource with YAML and kubectl](#webhook-cluster-sink)

#### <a id='cluster-sink-pks'></a> Create ClusterSink Resource with the PKS CLI

To create and apply a sink to a cluster, run the following command:

```
pks create-sink CLUSTER-NAME --name YOUR-SINK \
syslog-tls://YOUR-LOG-DESTINATION:YOUR-LOG-DESTINATION-PORT
```
Where:

* `CLUSTER-NAME` is the name of your cluster.
* `YOUR-SINK` is the name of the sink you wish to create.
* `YOUR-LOG-DESTINATION` is the URL or IP address of your log management service.
* `YOUR-LOG-DESTINATION-PORT` is the port number of your log management.

For example:

<pre class="terminal">
$ pks create-sink my-cluster --name second-sink syslog-tls://example.org:54321
</pre>

<p class="note"><strong>Note</strong>: Specifying a name is useful if you need to manage 
multiple sink resources in your cluster. If you do not specify a name, the command creates 
a sink resource in the cluster that shares the same name as the cluster.</p>

#### <a id='syslog-cluster-sink'></a> Create a Syslog ClusterSink Resource with YAML and kubectl

A syslog ClusterSink resource delivers logs using the TCP-based syslog protocol.

To define a syslog `ClusterSink` resource with YAML and `kubectl`, perform the following steps:

1. Create a YAML file that specifies your log destination in the following format:
  
    ```
    apiVersion: apps.DOMAIN-NAME/v1beta1
    kind: ClusterSink
    metadata:
       name: YOUR-SINK-NAME
    spec:
       type: syslog
       host: YOUR-LOG-DESTINATION
       port: YOUR-LOG-DESTINATION-PORT
       enable_tls: true
    ```
    Where:
    * `DOMAIN-NAME` your environment's domain name.
    * `YOUR-SINK` is a name you choose for your sink.
    * `YOUR-LOG-DESTINATION` is the URL or IP address of your log management service.
    * `YOUR-LOG-DESTINATION-PORT` is the port number of your log management service.

    For example:

    ```
    apiVersion: apps.example.com/v1beta1
    kind: ClusterSink
    metadata:
       name: clustersinkone
    spec:
       type: syslog
       host: example.com
       port: 54321
       enable_tls: true
    ```

1. Save the YAML file with an appropriate file name. For example, `clustersinkone.yml`.

1. Apply the ClusterSink resource to your cluster by running the following command: 

    ```
    kubectl apply -f SINK-CONFIG-FILE
    ```
    Where `SINK-CONFIG-FILE` is the name of your configuration YAML file.  
<br>
    For example:
    <pre class='terminal'>
    $ kubectl apply -f clustersinkone.yml
    </pre>

### <a id='cluster-list-sinks'></a> List ClusterSinks

To list sinks deployed to your cluster use the following command:

```
pks sinks CLUSTER-NAME
```

Where `CLUSTER-NAME` corresponds to the name of your cluster.

Alternately, you can use `kubectl`:

```
kubectl get clustersinks
```

### <a id='delete-cluster-sinks'></a> Delete ClusterSinks

To delete a specific cluster sink, specify the name of the sink you wish to delete:

```
pks delete-sink CLUSTER-NAME --name YOUR-SINK
``` 
Where `YOUR-SINK` is the name of your sink.  

Alternately, you can use `kubectl`:

```
kubectl delete clustersink YOUR-SINK
``` 

Where `YOUR-SINK` is the name of your sink.  


To delete all cluster sinks in your cluster, use the following command:

```
pks delete-sink CLUSTER-NAME 
``` 

Where `CLUSTER-NAME` is the name of your cluster.


## <a id='define-clustermetrics-sink'></a>ClusterMetricsSink Resources

ClusterMetricsSink resources enables you to capture metrics collected by your cluster's third party apps.

### <a id='define-clustermetrics-resource'></a>Create ClusterMetricsSinks
To create and manage ClusterMetricsSink resources, you can:

* [Create ClusterMetricsSink Resource with the PKS CLI](#clustermetrics-sink-pks)
* [Create a ClusterMetricsSink Resource with YAML and kubectl](#clustermetrics-sink)
* [Create a Webhook ClusterMetricsSink Resource with YAML and kubectl](#webhook-clustermetrics-sink)

#### <a id='clustermetrics-sink-pks'></a> Create ClusterMetricsSink Resource with the PKS CLI

To create and apply a sink to a cluster metric, run the following command:

```
pks create-sink CLUSTER-NAME --name YOUR-SINK \
syslog-tls://YOUR-LOG-DESTINATION:YOUR-LOG-DESTINATION-PORT
```
Where:

* `CLUSTER-NAME` is the name of your cluster.
* `YOUR-SINK` is the name of the sink you wish to create.
* `YOUR-LOG-DESTINATION` is the URL or IP address of your log management service.
* `YOUR-LOG-DESTINATION-PORT` is the port number of your log management.

For example:

<pre class="terminal">
$ pks create-sink my-cluster --name second-sink   syslog-tls://example.com:54321
</pre>

<p class="note"><strong>Note</strong>: Specifying a name is useful if you need to manage 
multiple clustermetrics sink resources in your cluster. If you do not specify a name, the command creates 
a sink resource in the cluster that shares the same name as the cluster.</p>

#### <a id='clustermetrics-sink'></a> Create a ClusterMetricsSink Resource with YAML and kubectl

A ClusterMetricsSink resource delivers metrics using a TCP-based protocol.

To define a syslog `ClusterMetricsSink` resource with YAML and `kubectl`, perform the following steps:

1. Create a YAML file that specifies your metrics endpoint in the following format:
  
    ```
    apiVersion: apps.DOMAIN-NAME/v1beta1
    kind: ClusterSink
    metadata:
       name: YOUR-SINK-NAME
    spec:
       type: syslog
       host: YOUR-LOG-DESTINATION
       port: YOUR-LOG-DESTINATION-PORT
       enable_tls: true
    ```
    Where:
    * `DOMAIN-NAME` is your environment's domain name.
    * `YOUR-SINK` is a name you choose for your sink.
    * `YOUR-LOG-DESTINATION` is the URL or IP address of your log management service.
    * `YOUR-LOG-DESTINATION-PORT` is the port number of your log management service.

    For example:

    ```
    apiVersion: apps.example.com/v1beta1
    kind: ClusterSink
    metadata:
       name: clustermetricssinkone
    spec:
       type: syslog
       host: example.com
       port: 54321
       enable_tls: true
    ```

1. Save the YAML file with an appropriate file name. For example, `clustermetricssinkone.yml`.

1. Apply the ClusterMetricsSink resource to your cluster by running the following command: 

    ```
    kubectl apply -f SINK-CONFIG-FILE
    ```
    Where `SINK-CONFIG-FILE` is the name of your configuration YAML file.  
<br>
    For example:
    <pre class='terminal'>
    $ kubectl apply -f clustermetricssinkone.yml
    </pre>

#### <a id='webhook-clustermetrics-sink'></a> Create a Webhook ClusterMetricsSink Resource with YAML and kubectl

A webhook ClusterMetricsSink resource batches logs into 1 second units, wraps the resulting payload in JSON, 
and uses the POST method to deliver the logs to the address of your log management service.

To define a webhook `ClusterMetricsSink` resource with YAML and `kubectl`, perform the following steps:

1. Create a YAML file that specifies your log destination in the following format:
  
    ```
    apiVersion: apps.DOMAIN-NAME/v1beta1
    kind: ClusterSink
    metadata:
      name: YOUR-SINK-NAME
    spec:
      type: webhook
      url: YOUR-LOG-DESTINATION
    ```
    Where:
    * `DOMAIN-NAME` is your environment's domain name.
    * `YOUR-SINK-NAME` is a name you choose for your sink.
    * `YOUR-LOG-DESTINATION` is the URL or IP address of your log management service.

    For example:
  
    ```
    apiVersion: apps.example.com/v1beta1
    kind: ClusterSink
    metadata:
      name: clustermetricssinktwo
    spec:
      type: webhook
      url: example.com
    ```

1. Save the YAML file with an appropriate file name. For example, `clustermetricssinktwo.yml`.

1. Apply the ClusterMetricsSink resource to your cluster by running the following command: 

    ```
    kubectl apply -f SINK-CONFIG-FILE
    ```
    Where `SINK-CONFIG-FILE` is the name of your configuration YAML file.  
<br> 
    For example:
    <pre class='terminal'>
    $ kubectl apply -f clustermetricssinktwo.yml
    </pre>

### <a id='list-clustermetrics-sinks'></a> List ClusterMetrics Sinks

To list all ClusterMetrics sinks deployed to your cluster, use the following command:

```
pks sinks CLUSTER-NAME
```

Where `CLUSTER-NAME` corresponds to the name of your cluster.

Alternately, you can use `kubectl`:

```
kubectl get clustersinks
``` 

### <a id='delete-clustermetrics-sinks'></a> Delete ClusterMetrics Sinks

To delete a specific ClusterMetrics sink, use the following command:

```
pks delete-sink CLUSTER-NAME --name YOUR-SINK
``` 
Where `YOUR-SINK` is the name of your sink.  

Alternately, you can use `kubectl`:

```
kubectl delete clustersink YOUR-SINK
``` 

Where `YOUR-SINK` is the name of your sink. 

To delete all ClusterMetrics sinks in your cluster, use the following command:

```
pks delete-sink CLUSTER-NAME 
``` 

Where `CLUSTER-NAME` is the name of your cluster.






## <a id='define-namespace-sink'></a>NameSpace Sink Resources

A NameSpace Sink resource filters logs by namespace within a cluster.

Currently you can only use `kubectl` to create and manage namespace sinks.

### <a id='define-sink-resource'></a>Create NameSpace Sinks

#### <a id='sink-kubectl'></a> Create a NameSpace Sink Resource with YAML and kubectl

To define a NameSpace Sink resource with YAML and `kubectl`, perform the following steps:

1. Create a YAML file that specifies your log destination in the following format:

    ```
    apiVersion: apps.DOMAIN-NAME/v1beta1
    kind: Sink
    metadata:
      name: YOUR-SINK
      namespace: YOUR-NAMESPACE
    spec:
      type: syslog
      host: YOUR-LOG-DESTINATION
      port: YOUR-LOG-DESTINATION-PORT
      enable_tls: true
    ```
    Where:
    * `DOMAIN-NAME` is your environment's domain name.
    * `YOUR-SINK` is a name you choose for your sink.
    * `YOUR-NAMESPACE` is the name of your namespace.
    * `YOUR-LOG-DESTINATION` is the URL or IP address of your log management service.
    * `YOUR-LOG-DESTINATION-PORT` is the port number of your log management service.

    For example:

    ```
    apiVersion: apps.example.com/v1beta1
    kind: Sink
    metadata:
      name: namespacesinkone
      namespace: namespaceone
    spec:
      type: syslog
      host: example.com
      port: 54321
      enable_tls: true
    ```

1. Save the YAML file with an appropriate file name. For example, `namespacesinkone.yml`.

1. Apply the Sink resource to your cluster by running the following command: 

    ```
    kubectl apply -f SINK-CONFIG-FILE
    ```
    Where `SINK-CONFIG-FILE` is the name of your configuration YAML file.  
<br>
    For example:
    <pre class='terminal'>
    $ kubectl apply -f namespacesinkone.yml
    </pre>

### <a id='list-sink sinks'></a> List NameSpace Sinks

To list namespace sinks use the command:

```
kubectl get sinks
``` 

This command lists the Sink resources deployed to a namespace.

### <a id='delete-namespace-sinks'></a> Delete NameSpace Sinks

To delete a namespace sink from your cluster, use the following command:  

```
kubectl delete sink YOUR-SINK
``` 

Where `YOUR-SINK` is the name of your namespace sink.




## <a id="related-links"></a> Related Links

For more information on sinks in <%= vars.product_short %>, see the following topics:

* For information about using sinks for monitoring, see [Monitoring <%= vars.product_short %> with Sinks](./monitor-sinks.html).
* For information about sink architecture, see [Sink Architecture in <%= vars.product_short %>](sink-architecture.html).
